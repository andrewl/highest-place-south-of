{"version":3,"sources":["webpack:///./src/components/wikidata.js","webpack:///./src/components/peak.js","webpack:///./src/components/peakslist.js","webpack:///./src/components/animatedleafletmap.js","webpack:///./src/components/peaksandmap.js","webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/layout.js"],"names":["require","Wikidata","props","_this","_React$Component","call","this","get","obj","key","split","reduce","o","x","state","data","componentDidUpdate","prevProps","prevState","_this2","id","fetch","then","res","json","setState","render","url","wikidata_image","console","log","replace","wikidata_image_md5","md5","substring","react_default","a","createElement","index_esm","alignContent","src","React","Component","defaultProps","Peak","next_peak","next","p","color","name","font","elevation","mr","disabled","prevPeakCallback","onClick","ml","nextPeakCallback","wikidata","position","description","image","PeaksList","activePeak","setActivePeak","prevPeak","nextPeak","peak_idx","updateMapPositionCallback","peaks","geometry","envelope","minY","minX","peak","next_peak_name","next_peak_callback","prev_peak_callback","bind","length","featureFields","components_peak","ele","AnimatedLeafletMap","mapRef","markerLayer","leafletElement","flyTo","zoom","positionMap","newPosition","Map","ref","center","TileLayer","attribution","minZoom","maxZoom","accessToken","tilesetId","Marker","Popup","markerText","PeaksAndMap","updateMapPosition","Fragment","width","peakslist","window","components_animatedleafletmap","__webpack_require__","d","__webpack_exports__","query","IndexPage","_ref","highestPeaks","allGeoFeature","edges","node","forEach","edge","parseInt","push","layout","peaksandmap","m","module","exports","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","StaticQueryContext","loader","enqueue","createContext","StaticQueryDataRenderer","staticQueryData","finalData","StaticQuery","children","Consumer","Layout","gatsby_browser_entry_StaticQuery","flexWrap","fontSize","fontsize","pt","bg","_755544856"],"mappings":"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","file":"component---src-pages-index-js-5d8b42f3fe0ff791909c.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Box, Heading, Text, Button, Image } from \"rebass\"\nimport md5 from \"md5\"\nconst axios = require(\"axios\")\n\nclass Wikidata extends React.Component {\n  static propTypes = {\n    /** Latitude and Longitude of the map centre in an array, eg [51, -1] **/\n    id: PropTypes.string,\n  }\n\n  static defaultProps = {\n    id: null,\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = { data: [] }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.id != this.props.id) {\n      if (this.props.id) {\n        fetch(\n          \"https://www.wikidata.org/wiki/Special:EntityData/\" +\n            this.props.id +\n            \".json\"\n        )\n          .then(res => res.json())\n          .then(json => this.setState({ data: json }))\n      }\n    }\n  }\n\n  get = function(obj, key) {\n    return key.split(\".\").reduce(function(o, x) {\n      return typeof o == \"undefined\" || o === null ? o : o[x]\n    }, obj)\n  }\n\n  render() {\n    if (!this.props.id) {\n      return null\n    }\n    var wikidata_image = this.props.id\n    var url = \"\"\n    console.log(this.state.data)\n\n    wikidata_image = this.get(\n      this.state.data,\n      \"entities.\" + this.props.id + \".claims.P18.0.mainsnak.datavalue.value\"\n    )\n\n    if (!wikidata_image) {\n      return null\n    }\n\n    wikidata_image = wikidata_image.replace(/ /g, \"_\")\n\n    var wikidata_image_md5 = md5(wikidata_image)\n    console.log(wikidata_image_md5)\n\n    url =\n      \"https://upload.wikimedia.org/wikipedia/commons/thumb/\" +\n      wikidata_image_md5.substring(0, 1) +\n      \"/\" +\n      wikidata_image_md5.substring(0, 2) +\n      \"/\" +\n      wikidata_image +\n      \"/220px-\" +\n      wikidata_image\n\n    return (\n      <Box>\n        <Image alignContent='center' src={url} />\n      </Box>\n    )\n  }\n}\n\nexport default Wikidata\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Box, Heading, Text, Button } from \"rebass\"\nimport Wikidata from \"../components/wikidata\"\nconst axios = require(\"axios\")\n\nclass Peak extends React.Component {\n  static propTypes = {\n    /** Latitude and Longitude of the map centre in an array, eg [51, -1] **/\n    position: PropTypes.array,\n    name: PropTypes.string,\n    description: PropTypes.string,\n    image: PropTypes.string,\n    next: PropTypes.string,\n    elevation: PropTypes.string,\n    wikidata: PropTypes.string,\n    nextPeakCallback: PropTypes.func,\n    prevPeakCallback: PropTypes.func,\n  }\n\n  static defaultProps = {\n    position: [51, -1],\n    name: \"name\",\n    description: \"blah\",\n    image: \"\",\n    elevation: 0,\n    next: \"aa\",\n    wikidata: null,\n    nextPeakCallback: null,\n    prevPeakCallback: null,\n  }\n\n  //)}\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    var next_peak = this.props.next\n    if (next_peak !== \"\") {\n      next_peak = \" south of \" + next_peak\n    }\n\n    return (\n      <Box p={2}>\n        <Heading color=\"secondary\" p={2}>\n          {this.props.name}\n        </Heading>\n        <Text font=\"body\" color=\"text\" p={2}>\n          At {this.props.elevation}m {this.props.name} is the highest point in\n          the UK{next_peak}\n        </Text>\n        <Box p={2} mr={2}>\n          <Button\n            disabled={!this.props.prevPeakCallback}\n            onClick={this.props.prevPeakCallback}\n          >\n            Previous\n          </Button>\n          <Button\n            ml={2}\n            disabled={!this.props.nextPeakCallback}\n            onClick={this.props.nextPeakCallback}\n          >\n            Next\n          </Button>\n        </Box>\n        <Wikidata id={this.props.wikidata} />\n      </Box>\n    )\n  }\n}\n\nexport default Peak\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Peak from \"../components/peak\"\n\nclass PeaksList extends React.Component {\n  static propTypes = {\n    peaks: PropTypes.array,\n    updateMapPositionCallback: PropTypes.func,\n  }\n\n  static defaultProps = {\n    peaks: [],\n    updateMapPositionCallback: null,\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = { activePeak: 0 }\n    this.setActivePeak(0)\n  }\n\n  prevPeak() {\n    this.setActivePeak(this.state.activePeak - 1)\n  }\n\n  nextPeak() {\n    this.setActivePeak(this.state.activePeak + 1)\n  }\n\n  setActivePeak(peak_idx) {\n    console.log(\"Setting active peak to \" + peak_idx)\n    this.setState({ activePeak: peak_idx })\n    if (this.props.updateMapPositionCallback) {\n      this.props.updateMapPositionCallback([\n        this.props.peaks[peak_idx].geometry.envelope.minY,\n        this.props.peaks[peak_idx].geometry.envelope.minX,\n      ])\n    }\n  }\n\n  render() {\n    var peak = this.props.peaks[this.state.activePeak]\n    var next_peak_name = \"\"\n    var next_peak_callback = null\n    var prev_peak_callback =\n      this.state.activePeak == 0 ? null : this.prevPeak.bind(this)\n    if (this.state.activePeak + 1 < this.props.peaks.length) {\n      next_peak_name = this.props.peaks[this.state.activePeak + 1].featureFields\n        .name\n      next_peak_callback = this.nextPeak.bind(this)\n    }\n    return (\n      <Peak\n        id={peak.featureFields.name}\n        name={peak.featureFields.name}\n        elevation={peak.featureFields.ele}\n        wikidata={peak.featureFields.wikidata}\n        position={[peak.geometry.envelope.minY, peak.geometry.envelope.minX]}\n        next={next_peak_name}\n        nextPeakCallback={next_peak_callback}\n        prevPeakCallback={prev_peak_callback}\n      />\n    )\n  }\n}\n\nexport default PeaksList\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\"\nimport \"./animatedleafletmap.css\"\n\nclass AnimatedLeafletMap extends React.Component {\n  static propTypes = {\n    /** Latitude and Longitude of the map centre in an array, eg [51, -1] **/\n    position: PropTypes.array,\n\n    /** Initial zoom level for the map (default 13) **/\n    zoom: PropTypes.number,\n\n    /** If set, will display a marker, which when clicked will display this text **/\n    markerText: PropTypes.string,\n  }\n\n  static defaultProps = {\n    position: [51, -1],\n    zoom: 11,\n    markerText: \"\",\n  }\n\n  constructor(props) {\n    super(props)\n    this.mapRef = null\n    this.markerLayer = null\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const map = this.mapRef.leafletElement\n    if (map != null) {\n      this.mapRef.leafletElement.flyTo(this.props.position, this.props.zoom)\n    }\n  }\n\n  positionMap(newPosition) {\n    this.setState({ position: newPosition })\n  }\n\n  render() {\n    return (\n      <Map\n        ref={ref => (this.mapRef = ref)}\n        center={this.props.position}\n        zoom={this.props.zoom}\n      >\n        <TileLayer\n          attribution='&copy; <a href=\"https://www.mapbox.com/about/maps\">MapBox</a> &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a> &copy; <a href=\"https://www.digitalglobe.com\">DigitalGlobe</a> <a href=\"https://www.mapbox.com/map-feedback/\">Improve this map</a>'\n          url=\"https://api.mapbox.com/styles/v1/mapbox/{tilesetId}/tiles/{z}/{x}/{y}?access_token={accessToken}\"\n          minZoom={this.props.zoom}\n          maxZoom={this.props.zoom}\n          accessToken=\"pk.eyJ1IjoiYW5kcmV3bCIsImEiOiJJdDlBVy0wIn0.6iigHBr09SrVB3N8graGdA\"\n          tilesetId=\"satellite-v9\"\n        />\n        <Marker position={this.props.position}>\n          <Popup>{this.props.markerText}</Popup>\n        </Marker>\n      </Map>\n    )\n  }\n}\n\nexport default AnimatedLeafletMap\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport PeaksList from \"../components/peakslist\"\nimport { Flex, Box } from \"rebass\"\nimport AnimatedLeafletMap from \"../components/animatedleafletmap\"\n\nclass PeaksAndMap extends React.Component {\n  static propTypes = {\n    peaks: PropTypes.array,\n  }\n\n  static defaultProps = {\n    peaks: [],\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = { position: [30, 20] }\n  }\n\n  updateMapPosition(position) {\n    console.log(\"Updating map position to\")\n    console.log(position)\n    this.setState({ position: position })\n  }\n\n  render() {\n    return (\n      <>\n        <Box width={1 / 3}>\n          <PeaksList\n            updateMapPositionCallback={this.updateMapPosition.bind(this)}\n            peaks={this.props.peaks}\n          />\n        </Box>\n        <Box width={2 / 3}>\n          {typeof window !== \"undefined\" && (\n            <AnimatedLeafletMap position={this.state.position} zoom={7} />\n          )}\n        </Box>\n      </>\n    )\n  }\n}\n\nexport default PeaksAndMap\n","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport { Box } from \"rebass\"\nimport PeaksAndMap from \"../components/peaksandmap\"\n\nconst IndexPage = ({ data }) => {\n  const highestPeaks = [data.allGeoFeature.edges[0].node]\n  data.allGeoFeature.edges.forEach(function(edge) {\n    if (\n      parseInt(edge.node.featureFields.ele) >\n      parseInt(highestPeaks[highestPeaks.length - 1].featureFields.ele)\n    ) {\n      highestPeaks.push(edge.node)\n    }\n  })\n\n  return (\n    <Layout>\n      <PeaksAndMap peaks={highestPeaks} />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allGeoFeature(\n      sort: { fields: geometry___envelope___minY, order: ASC }\n      filter: {\n        featureFields: { name: { ne: null }, ele: { regex: \"/^[0-9]+$/\" } }\n      }\n    ) {\n      edges {\n        node {\n          id\n          geometry {\n            envelope {\n              minY\n              minX\n            }\n          }\n          featureFields {\n            name\n            ele\n            wikidata\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport { Flex, Box, Heading, Text } from \"rebass\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div>\n        <Flex m={3} flexWrap=\"wrap\">\n          <Box width={1 / 1}>\n            <Heading fontSize={[4, 5, 6]} color=\"primary\">\n              Highest place south of...\n            </Heading>\n          </Box>\n          <Box width={1 / 1}>\n            <Text color=\"text\" fontsize={[2, 3, 4]} pt={2}>\n              This is an interactive map of those places that can claim to be\n              'the highest place in the UK south of (some other place)'\n            </Text>\n            <Text color=\"text\" fontsize={[2, 3, 4]} pt={2}>\n              Why? Walking up Pen-y-fan recently I saw it was listed somewhere\n              as 'the highest place south of Cadair Idris' - being a mapping fan\n              I wondered whether it was possible to find out where all the\n              places that were the 'highest place south of' somewhere else.\n            </Text>\n          </Box>\n        </Flex>\n        <Flex>{children}</Flex>\n        <Flex>\n          <Box bg=\"primary\" p={2} color=\"text\" width={1 / 1}>\n            Build by Andrew Larcombe using GatsbyJS and using data from\n            OpenStreetMap, images from wikimedia and maps from MapBox\n          </Box>\n        </Flex>\n      </div>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}